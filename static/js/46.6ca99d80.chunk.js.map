{"version":3,"file":"static/js/46.6ca99d80.chunk.js","mappings":"gMAiFA,UA5EmB,WACjB,IAAAA,GAAsCC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA2BC,EAAAA,EAAAA,MAAnBC,EAAIF,EAAJE,KAAMC,EAAQH,EAARG,SAad,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACMC,EAAAA,EAAAA,IAAU,gCAADC,OACEd,EAAQ,KAAAc,OAAIf,IAC5C,KAAD,EAE6B,OAJxBS,EAAQE,EAAAK,KAGdC,QAAQC,IAAI,eAAgBT,EAASU,MACrC1B,EAAegB,EAASU,MAAMR,EAAAS,OAAA,SACvBX,EAASU,MAAI,wBAAAR,EAAAU,OAAA,GAAAb,EAAA,KACrB,kBAPe,OAAAJ,EAAAkB,MAAA,KAAAC,UAAA,KAQhBpB,IAAaqB,OAAM,SAACC,GAAC,OAAKR,QAAQS,MAAMD,EAAE,GAC5C,GAAG,CAACxB,EAAUD,KAEZ2B,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,OAAKE,UAAU,WAAUD,SACtBpC,GACCsC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAH,SAAA,EACED,EAAAA,EAAAA,KAAA,OACEE,UAAU,aACVG,IAAKxC,EAAYyC,MAAMC,WACvBC,IAAI,GACJC,MAAO,CAAEC,MAAO,UAElBP,EAAAA,EAAAA,MAAA,OAAKD,UAAU,YAAWD,SAAA,EACxBE,EAAAA,EAAAA,MAAA,QAAMD,UAAU,WAAUD,SAAA,CAAC,SAClB,KACPD,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAACC,GAAE,eAAAxB,OAAiBvB,EAAYyC,MAAMO,OAAQZ,SAChDpC,EAAYyC,MAAMO,YAGvBV,EAAAA,EAAAA,MAAA,QAAMD,UAAU,iBAAgBD,SAAA,CAAC,aACpBpC,EAAYiD,aAEzBd,EAAAA,EAAAA,KAAA,MAAAC,SAAKpC,EAAYQ,QACjB8B,EAAAA,EAAAA,MAAA,OAAKD,UAAU,cAAaD,SAAA,EAC1BD,EAAAA,EAAAA,KAAA,KACEE,UAAU,eACVa,KAAMlD,EAAYmD,SAClBC,OAAO,SACPC,IAAI,aAAYjB,SACjB,oBAGDE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACED,EAAAA,EAAAA,KAAA,SACEE,UAAU,gBACViB,KAAK,OACLC,MAAOvD,EAAYwD,aAErBrB,EAAAA,EAAAA,KAAA,UACEsB,QAAS,WACPC,UAAUC,UAAUC,UAAU5D,EAAYwD,WAC1CnD,GAAa,SAACwD,GAAQ,OAAMA,CAAQ,IACpCC,YACE,kBAAMzD,GAAa,SAACwD,GAAQ,OAAMA,CAAQ,GAAC,GAC3C,IAEJ,EAAEzB,SAEDhC,EAAY,SAAW,uBAOlC+B,EAAAA,EAAAA,KAAA,MAAAC,SAAI,iBAKd,C","sources":["components/RepoDetail.jsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nconst RepoDetail = () => {\n  const [gitRepoData, setGitRepoData] = useState();\n  const [cloneCopy, setCloneCopy] = useState(false);\n  const { name, username } = useParams();\n\n  useEffect(() => {\n    const getGitUser = async () => {\n      const response = await axios.get(\n        `https://api.github.com/repos/${username}/${name}`\n      );\n      console.log(\"USER IS HERE\", response.data);\n      setGitRepoData(response.data);\n      return response.data;\n    };\n    getGitUser().catch((e) => console.error(e));\n  }, [username, name]);\n  return (\n    <div>\n      <div className=\"top-cont\">\n        {gitRepoData ? (\n          <>\n            <img\n              className=\"avatar-img\"\n              src={gitRepoData.owner.avatar_url}\n              alt=\"\"\n              style={{ width: \"30%\" }}\n            />\n            <div className=\"name-cont\">\n              <span className=\"username\">\n                Owner:{\" \"}\n                <Link to={`/users/user/${gitRepoData.owner.login}`}>\n                  {gitRepoData.owner.login}\n                </Link>\n              </span>\n              <span className=\"repo-lang-span\">\n                Language: {gitRepoData.language}\n              </span>\n              <h2>{gitRepoData.name}</h2>\n              <div className=\"follow-cont\">\n                <a\n                  className=\"view-ongit-a\"\n                  href={gitRepoData.html_url}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  View on GitHub\n                </a>\n                <div>\n                  <input\n                    className=\"clone-url-inp\"\n                    type=\"text\"\n                    value={gitRepoData.clone_url}\n                  />\n                  <button\n                    onClick={() => {\n                      navigator.clipboard.writeText(gitRepoData.clone_url);\n                      setCloneCopy((isCopied) => !isCopied);\n                      setTimeout(\n                        () => setCloneCopy((isCopied) => !isCopied),\n                        3000\n                      );\n                    }}\n                  >\n                    {cloneCopy ? \"Copied\" : \"Clone\"}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </>\n        ) : (\n          <h1>Loadin...</h1>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default RepoDetail;\n"],"names":["_useState","useState","_useState2","_slicedToArray","gitRepoData","setGitRepoData","_useState3","_useState4","cloneCopy","setCloneCopy","_useParams","useParams","name","username","useEffect","getGitUser","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","concat","sent","console","log","data","abrupt","stop","apply","arguments","catch","e","error","_jsx","children","className","_jsxs","_Fragment","src","owner","avatar_url","alt","style","width","Link","to","login","language","href","html_url","target","rel","type","value","clone_url","onClick","navigator","clipboard","writeText","isCopied","setTimeout"],"sourceRoot":""}